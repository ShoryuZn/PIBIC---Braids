#MENU GERAL DAS TRANÇAS UFAL PROJETO BETA 1.4V(teste de gambiarra).
while True:
  print('[1] Gerador de matrizes para sigmas.')
  print('[2] Leitor de tranças.')
  print('[3] Introdução as tranças.')
  print('[4] Ajuda.')
  print('[5] Fechar programa.')

  #-------------------------------------------------------------------------------
  print()
  l = int(input('Qual programa voce deseja usar ?'))
  print()
  #-------------------------------------------------------------------------------
  if l == 1:
    print('Gerador de matriz para trança V1.0')
    print()
    print('PIBIC JR')
    GeradorTrança = [] # A matriz deve ser criada fora e antes da função.
    def geraGeradorTrança(m,n): # Função para gerar um agrupamento de cordas.
        bits=2**m # determina quantos linhas terá a matriz, valor fixo.
        repeticoes_coluna=(bits//(2**n))*2
        repeticoes_linha=(2**n//2)//2
        contador=0 # Esse contador será sempre incrementado até a quantidade de bits e será zerado quando a função repetir.
        if not GeradorTrança: # essa condição cria a primeira coluna da tabela.
            for i in range(bits // 2):
                GeradorTrança.append(' σ -1 |')
            for i in range(bits // 2):
              GeradorTrança.append(' σ 1 |')
        for j in range(repeticoes_coluna):
            for i in range(repeticoes_linha):
                GeradorTrança[contador] = GeradorTrança[contador] + ' σ -1 |'
                contador += 1
            for i in range(repeticoes_linha):
                GeradorTrança[contador] = GeradorTrança[contador] + ' σ 1 |'
                contador += 1
        if n==1:
            return GeradorTrança
        else:
            return geraGeradorTrança(m,n-1)

    cordas=int(input('Quantidade de cordas: ')) # quantidade de cordas.
    qtdc = cordas - 1 #desconsidera a ultima coluna
    matrizGeradorTrança = geraGeradorTrança(qtdc,qtdc)

    for i in range(len(matrizGeradorTrança)): # apenas para imprimir uma linha abaixo da outra.
        print(matrizGeradorTrança[i])
    sair = str(input('Deseja fechar o programa?(S ou N) ')).upper()
    if sair == 'S':
      break
    elif sair == 'N':
      continue
    print()
  #-------------------------------------------------------------------------------

  if l == 2:
    print('Leitor de trança V1.0')
    print()
    print('PIBIC JR')
    print()
    a = int(input('Qual a Quantidade de cordas? '))# Indica a quantidade de cordas
    print()
    c = 0
    e = 0
    f = 0
    for i in range(1,a): #laço de repetição ate a n corda
        print()
        b = int(input(f'Qual o sinal do sigma da corda {i}? ')) #coleta os sigmas
        if i < a:
          if b > 0:
            print()
            print(f'a corda {i} passa por cima da corda {i+1}') # n tem sigma positivo
            c += 1
          elif b == 0:
            f += 1
            print('')
          else:
            print()
            print(f'a corda {i} passa por baixo da corda {i+1}')# n tem sigma negativo
            e += 1

        elif i == a:
          if b < 0:
            print()
            print(f'a corda {i} passa por baixo da corda {i-1}')# n tem sigma positivo
            c += 1
          else:
            print()
            print(f'a corda {i} passa por cima da corda {i-1}')# n tem sigma negativo
            e += 1
    print()
    if f == i:
      print('A trança é trivial.')
    elif c > e:
      print('A trança é positiva')
    else:
      print('A trança é negativa')
    print()
    sair = str(input('Deseja fechar o programa?(S ou N) ')).upper()
    if sair == 'S':
      break
    elif sair == 'N':
      continue
    print()

  #-------------------------------------------------------------------------------

  if l == 3:
    print('Link do artigo de introdução: ')
    sair_art = str(input('Deseja fechar o programa?(S ou N) ')).upper()
    if sair_art == 'S':
      break
  print()


  #-------------------------------------------------------------------------------

  if l == 4:
    print()
    print(' Como usar o gerador de matrizes para tranças?')
    print('Após iniciar digite quantas cordas existem no conjunto, depois disso, o programa ira gerar as matrizes juntamnete dos sigmas.')
    print()
    print(' Como usar o leitor de tranças?')
    print('Após digitar o número de cordas, confira se os sinais dos sigmas são iguais, se sim, digite s; se não, digite n, após isso digite a sequencia dos sigmas (A depender do tipo de trança o programa vai classificala).')
    print('')
    sair_int = str(input('Deseja fechar o programa?(S ou N) ')).upper()
    if sair_int == 'S':
      break
  print()

  #-------------------------------------------------------------------------------

  if l == 5:
    sair = str(input('Deseja fechar o programa?(S ou N) ')).upper()
  if sair == 'S':
    break
  elif sair == 'N':
    continue
